---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=a0bdbbc4cfeaa81422c5217575fe9d53&query=Godfather
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.3.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Sun, 10 Jul 2022 16:39:41 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 8bd27032f0d38908fbe32b696e45c288.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - vL72Xk8LKlB0BZUIHc-ixwccL4JBFFV_8c41RIPCPv7k2WbkMcQ8pA==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 10 Jul 2022 16:39:41 GMT
recorded_with: VCR 6.1.0
